from sklearn import datasets
iris=datasets.load_iris()


X=iris.data
Y=iris.target


from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=\
    train_test_split(X,Y,test_size=0.3 , random_state=1234,stratify=Y)
    
   

from sklearn.svm import SVC
from sklearn.metrics import confusion_matrix

svc=SVC(kernel='rbf',gamma=1.0)
svc.fit(X_train,Y_train)
Y_predict=svc.predict(X_test)
cm_rbf01=confusion_matrix(Y_test,Y_predict)

cm_rbf01

svc=SVC(kernel='rbf',gamma=10.0)
svc.fit(X_train,Y_train)
Y_predict=svc.predict(X_test)
cm_rbf10=confusion_matrix(Y_test,Y_predict)
cm_rbf10

#linear kernal-:
 svc=SVC(kernel='linear')
svc.fit(X_train,Y_train)
Y_predict=svc.predict(X_test)
cm_linear=confusion_matrix(Y_test,Y_predict)

cm_linear

#Polynomial kernal :-
svc=SVC(kernel='poly',)
svc.fit(X_train,Y_train)
Y_predict=svc.predict(X_test)
cm_poly=confusion_matrix(Y_test,Y_predict)
cm_poly

#Sigmoid kernal:-
svc=SVC(kernel='sigmoid')
svc.fit(X_train,Y_train)
Y_predict=svc.predict(X_test)
cm_sigmoid=confusion_matrix(Y_test,Y_predict)
cm_sigmoid
